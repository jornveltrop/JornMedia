import type { NextPage } from 'next'
import Head from 'next/head'
import {GraphQLClient } from 'graphql-request';
import homeQuery from './api/home-query';
import Header from '../components/Header/Header';
import Hero from '../components/Hero/Hero';

interface HomeProps {
  home: {
    siteLogo: {
      alt: String
      url: String
      width: Number
      height: Number
    }
    title: String
    backgroundPhoto: Object
    tagline: String
    skillsSummary: []
    clientsPreview: []
    description: String
  }
}

const Home: NextPage<HomeProps>  = ( {home} ) => {
  return (
    <>
      <Head>
        <title>JornMedia</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header 
        siteLogo={home.siteLogo}
      />
      <main>
        <Hero 
          backgroundPhoto={home.backgroundPhoto}
          title={home.title}
          tagline={home.tagline}
          skillsSummary={home.skillsSummary}
          description={home.description}
          clients_preview={home.clientsPreview}
        />
      </main>
    </>
  )
}

const query = homeQuery

export async function getStaticProps () {
  const endpoint = "https://graphql.datocms.com/";
  const graphQLClient = new  GraphQLClient(endpoint, {
    headers: {
      "content-type": "application/json",
      authorization: "Bearer " + process.env.DATOCMS_API_KEY,
    }
  })
  const data = await graphQLClient.request(query)
  console.log(data)
  return {
    props: data
  }
}

export default Home
