import type { NextPage } from 'next'
import Head from 'next/head'
import {GraphQLClient } from 'graphql-request';
import Header from '../components/Header/Header';
import Sections from '../components/Sections/Sections';
import homeStyle from '../styles/home.module.css'
import homeQuery from './api/homeQuery';
import headerQuery from './api/headerQuery';
import Footer from '../components/Footer/Footer';
import footerQuery from './api/footerQuery';
import ToTop from '../components/ToTop/ToTop';

interface HomeProps {
  home: {
    siteLogo: {
      alt: String
      url: String
      width: Number
      height: Number
    }
    title: String
    backgroundPhoto: Object
    tagline: String
    skillsSummary: []
    clientsPreview: []
    description: String
    sections: [String]
  }
  header: {
    links: [{[key:string]:String}]
    siteLogo: {[key:string]:String | Number}
  }
  footer: {
    copyrightTag: String
  }
}

const Home: NextPage<HomeProps>  = ( {home, header, footer} ) => {

  return (
    <>
      <Head>
        <title>JornMedia</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header headerData={header}/>
      <main className={homeStyle.home}>
        <Sections sections={home.sections} />
      </main>
      <Footer footerData={footer} />
      <ToTop />
    </>
  )
}

export async function getStaticProps () {
  const endpoint = "https://graphql.datocms.com/";
  const graphQLClient = new  GraphQLClient(endpoint, {
    headers: {
      "content-type": "application/json",
      authorization: "Bearer " + process.env.DATOCMS_API_KEY,
    }
  })
  const homeData = await graphQLClient.request(homeQuery)
  const headerData = await graphQLClient.request(headerQuery)
  const footerData = await graphQLClient.request(footerQuery)
  const data = {home: homeData.home, header: headerData.header, footer: footerData.footer}

  return {
    props: data
  }
}

export default Home
